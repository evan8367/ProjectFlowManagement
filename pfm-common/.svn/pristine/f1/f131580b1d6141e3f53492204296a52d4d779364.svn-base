package com.sdx.merak.common.fdfs;

import org.apache.commons.configuration.ConfigurationException;
import org.apache.commons.pool2.impl.GenericKeyedObjectPoolConfig;

public class FastdfsClientConfig {

	public static final int DEFAULT_CONNECT_TIMEOUT = 5; // second
	public static final int DEFAULT_NETWORK_TIMEOUT = 30; // second

	private int connectTimeout = DEFAULT_CONNECT_TIMEOUT * 1000;
	private int networkTimeout = DEFAULT_NETWORK_TIMEOUT * 1000;
	private String trackerAddr = null;
	// private int trackerClientPoolMaxIdlePerKey =

	public FastdfsClientConfig() {
		super();
		// TODO Auto-generated constructor stub
	}

	public FastdfsClientConfig(String trackerServer) throws ConfigurationException {
		super();
		trackerAddr = trackerServer;
	}

	public int getConnectTimeout() {
		return connectTimeout;
	}

	public void setConnectTimeout(int connectTimeout) {
		this.connectTimeout = connectTimeout;
	}

	public int getNetworkTimeout() {
		return networkTimeout;
	}

	public void setNetworkTimeout(int networkTimeout) {
		this.networkTimeout = networkTimeout;
	}

	public String getTrackerAddr() {
		return trackerAddr;
	}

	public void setTrackerAddrs(String trackerAddr) {
		this.trackerAddr = trackerAddr;
	}

	public GenericKeyedObjectPoolConfig getTrackerClientPoolConfig() {
		GenericKeyedObjectPoolConfig poolConfig = new GenericKeyedObjectPoolConfig();
		poolConfig.setMaxTotalPerKey(100);
		poolConfig.setMaxIdlePerKey(10);
		poolConfig.setMinIdlePerKey(2);
		poolConfig.setMinEvictableIdleTimeMillis(1000L * 60L * 30L);
		return poolConfig;
	}

	public GenericKeyedObjectPoolConfig getStorageClientPoolConfig() {
		GenericKeyedObjectPoolConfig poolConfig = new GenericKeyedObjectPoolConfig();
		poolConfig.setMaxTotalPerKey(500);
		poolConfig.setMaxIdlePerKey(10);
		poolConfig.setMinIdlePerKey(2);
		poolConfig.setMinEvictableIdleTimeMillis(1000L * 60L * 30L);
		return poolConfig;
	}

}
